{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the cleantest documentation This documentation is currently a work-in-progress.","title":"Home"},{"location":"#welcome-to-the-cleantest-documentation","text":"This documentation is currently a work-in-progress.","title":"Welcome to the cleantest documentation"},{"location":"license/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"user-guide/getting-started/","text":"Getting started with cleantest Now that you have the cleantest framework installed on your system, let's get you introduced to writing some basic tests. This example assumes that you have LXD installed and configured, and cleantest is installed correctly on your system. If not, please revisit the installation documentation. Also, you will need to have pytest installed on your system as well. You can install it using the following command: pip install pytest Some background The goal of the cleantest framework is to provide an easy way to bring up clean testing environments without a hassle. A \"simple test\" is a test written with cleantest that can drop on top of a pre-existing testing framework such as pytest or unittest . These \"simple tests\" can be broken down into three parts: Configuration statements A collection of Testlets One or more Test Suites Configuration statements control the state and flow of cleantest , testlets are the tests to be run in the testing environment, and the test suites define the order in which the testlets are executed. Defining a testlet A testlet is essentially an entire Python file wrapped in a function; it contains all the imports, definitions, and logic a program needs to run. Here is an example of a testlet: from cleantest.provider import lxd @lxd() def do_something(): import sys try: import urllib sys.exit(0) except ImportError: sys.exit(1) An important thing to note about testlets is that they are not run in the environment as the test suite. The testlets are actually picked up by the interpreter and run somewhere else, and a Result object is returned containing an exit code, stdout, and stderr. Therefore, you should always import the Python models and assets you need within the body of the testlet. Writing a test suite To evaluate the results of a testlet, you need a test suite . This part should be invoked by your testing framework of choice. In our case, we used pytest : class TestSuite: def test_do_something(self) -> None: result = do_something() assert result.exit_code == 0 The test suite should be focused solely on launching testlets and evaulating the results. You should never define testlets inside a test suite. They should always be a top-level, global function. Bringing it all together To bring it all together, combine the testlet and test suite combined into a single Python file: #!/usr/bin/env python3 \"\"\"A basic test\"\"\" from cleantest.provider import lxd @lxd(preserve=False) def do_something(): import sys try: import urllib sys.exit(0) except ImportError: sys.exit(1) class TestSuite: def test_do_something(self) -> None: result = do_something() assert result.exit_code == 0 Now use pytest to run the test: pytest my_cleantest.py You should see the following output from your test: =========== test session starts =========== platform linux -- Python 3.10.4, pytest-7.1.3, pluggy-1.0.0 rootdir: /mnt/d/scratch collected 1 item basic_test.py . [100%] =========== 1 passed in 8.95s =========== Congrats, you have written your first simple test! Next steps Now that you have taken your first steps with cleantest , proceed to the next section on controlling your test environment with hooks.","title":"Getting Started"},{"location":"user-guide/getting-started/#getting-started-with-cleantest","text":"Now that you have the cleantest framework installed on your system, let's get you introduced to writing some basic tests. This example assumes that you have LXD installed and configured, and cleantest is installed correctly on your system. If not, please revisit the installation documentation. Also, you will need to have pytest installed on your system as well. You can install it using the following command: pip install pytest","title":"Getting started with cleantest"},{"location":"user-guide/getting-started/#some-background","text":"The goal of the cleantest framework is to provide an easy way to bring up clean testing environments without a hassle. A \"simple test\" is a test written with cleantest that can drop on top of a pre-existing testing framework such as pytest or unittest . These \"simple tests\" can be broken down into three parts: Configuration statements A collection of Testlets One or more Test Suites Configuration statements control the state and flow of cleantest , testlets are the tests to be run in the testing environment, and the test suites define the order in which the testlets are executed.","title":"Some background"},{"location":"user-guide/getting-started/#defining-a-testlet","text":"A testlet is essentially an entire Python file wrapped in a function; it contains all the imports, definitions, and logic a program needs to run. Here is an example of a testlet: from cleantest.provider import lxd @lxd() def do_something(): import sys try: import urllib sys.exit(0) except ImportError: sys.exit(1) An important thing to note about testlets is that they are not run in the environment as the test suite. The testlets are actually picked up by the interpreter and run somewhere else, and a Result object is returned containing an exit code, stdout, and stderr. Therefore, you should always import the Python models and assets you need within the body of the testlet.","title":"Defining a testlet"},{"location":"user-guide/getting-started/#writing-a-test-suite","text":"To evaluate the results of a testlet, you need a test suite . This part should be invoked by your testing framework of choice. In our case, we used pytest : class TestSuite: def test_do_something(self) -> None: result = do_something() assert result.exit_code == 0 The test suite should be focused solely on launching testlets and evaulating the results. You should never define testlets inside a test suite. They should always be a top-level, global function.","title":"Writing a test suite"},{"location":"user-guide/getting-started/#bringing-it-all-together","text":"To bring it all together, combine the testlet and test suite combined into a single Python file: #!/usr/bin/env python3 \"\"\"A basic test\"\"\" from cleantest.provider import lxd @lxd(preserve=False) def do_something(): import sys try: import urllib sys.exit(0) except ImportError: sys.exit(1) class TestSuite: def test_do_something(self) -> None: result = do_something() assert result.exit_code == 0 Now use pytest to run the test: pytest my_cleantest.py You should see the following output from your test: =========== test session starts =========== platform linux -- Python 3.10.4, pytest-7.1.3, pluggy-1.0.0 rootdir: /mnt/d/scratch collected 1 item basic_test.py . [100%] =========== 1 passed in 8.95s =========== Congrats, you have written your first simple test!","title":"Bringing it all together"},{"location":"user-guide/getting-started/#next-steps","text":"Now that you have taken your first steps with cleantest , proceed to the next section on controlling your test environment with hooks.","title":"Next steps"},{"location":"user-guide/installation/","text":"Installation Install cleantest cleantest can be installed using pip : pip install cleantest Before you can start writing tests using the cleantest framework, you also need to set up a testing environment provider. Set up testing environment providers You can use the following instructions to set up a supported testing environment provider to be used with cleantest . Some providers need to be installed before they can be used by cleantest , while other providers can be used without any extra set up. Note that you do not need to install every testing environment provider listed below ; you only need to install the providers you wish to use for testing. LXD To use LXD as a test environment provider with cleantest , you will need to have the snap package manager and snapd installed on your host system. Once you have snapd and the snap package manager on your host system, use the following command to install LXD: sudo snap install lxd After LXD has finished installing on the host system, use the following command to initialize a basic LXD cluster: lxd init --auto Once the LXD cluster finishes initializing, you can now use LXD as a test environment provider with cleantest . SSH Support for using remote environments via ssh is currently a work-in-progress. Local Support for destructive, local testing is currently a work-in-progress.","title":"Installation"},{"location":"user-guide/installation/#installation","text":"","title":"Installation"},{"location":"user-guide/installation/#install-cleantest","text":"cleantest can be installed using pip : pip install cleantest Before you can start writing tests using the cleantest framework, you also need to set up a testing environment provider.","title":"Install cleantest"},{"location":"user-guide/installation/#set-up-testing-environment-providers","text":"You can use the following instructions to set up a supported testing environment provider to be used with cleantest . Some providers need to be installed before they can be used by cleantest , while other providers can be used without any extra set up. Note that you do not need to install every testing environment provider listed below ; you only need to install the providers you wish to use for testing.","title":"Set up testing environment providers"},{"location":"user-guide/installation/#lxd","text":"To use LXD as a test environment provider with cleantest , you will need to have the snap package manager and snapd installed on your host system. Once you have snapd and the snap package manager on your host system, use the following command to install LXD: sudo snap install lxd After LXD has finished installing on the host system, use the following command to initialize a basic LXD cluster: lxd init --auto Once the LXD cluster finishes initializing, you can now use LXD as a test environment provider with cleantest .","title":"LXD"},{"location":"user-guide/installation/#ssh","text":"Support for using remote environments via ssh is currently a work-in-progress.","title":"SSH"},{"location":"user-guide/installation/#local","text":"Support for destructive, local testing is currently a work-in-progress.","title":"Local"}]}
# Copyright 2022 Jason C. Nucciarone, Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = fmt, lint

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path} 

[testenv]
basepython = python3
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
passenv =
    PYTHONPATH

[testenv:fmt]
description = Apply coding style standards to code.
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards.
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell {toxinidir}/. --skip {toxinidir}/.git --skip {toxinidir}/.tox \
        --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
        --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:docs]
description = Serve cleantest documentation locally.
deps =
    mkdocs
    mkdocs-material
commands =
    mkdocs serve

[testenv:build-docs]
description = Build cleantest documentation.
deps =
    mkdocs
    mkdocs-material
commands =
    mkdocs build

[testenv:publish-docs]
description = Publish cleantest documentation to GitHub Pages.
deps =
    mkdocs
    mkdocs-material
commands =
    mkdocs gh-deploy

[testenv:publish]
description = Publish cleantest to PyPI.
deps = 
    twine
    setuptools
    wheel
commands =
    rm -rf {toxinidir}/dist
    python setup.py sdist bdist_wheel
    twine upload {toxinidir}/dist/*

[testenv:lxd-local]
description = Run functional tests for a locally-hosted LXD cluster.
deps =
    -r {toxinidir}/requirements.txt
    pytest
commands =
    pytest -v --tb native --log-cli-level=ERROR {[vars]tst_path}/lxd/local

[testenv:lxd-local-parallel]
description = Run functional tests in parallel for a locally-hosted LXD cluster.
deps =
    -r {toxinidir}/requirements.txt
    pytest
commands =
    pytest -v --tb native --log-cli-level=ERROR {[vars]tst_path}/lxd/parallel

[testenv:lxd-remote]
description = Run functional tests for a remotely-hosted LXD cluster.

[testenv:lxd-remote-parallel]
description = Run functional tests in parallel for a remotely-hosted LXD cluster.

[testenv:snaps]
description = Run functional tests to test if cleantest supports snap packages
deps =
    -r {toxinidir}/requirements.txt
    pytest
commands =
    pytest -v --tb native --log-cli-level=ERROR {[vars]tst_path}/packages/snap

[testenv:files]
description = Run functional tests to test file and directory injections.
deps =
    -r {toxinidir}/requirements.txt
    pytest
commands =
    pytest -v --tb native --log-cli-level=ERROR {[vars]tst_path}/files
